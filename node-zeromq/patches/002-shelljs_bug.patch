--- a/script/build.js
+++ b/script/build.js
@@ -3,6 +3,7 @@ Object.defineProperty(exports, "__esModu
 const path_1 = require("path");
 const fs_1 = require("fs");
 const shelljs_1 = require("shelljs");
+const { execSync } = require('child_process')
 const utils_js_1 = require("./utils.js");
 const root = (0, path_1.dirname)(__dirname);
 function parseOptions() {
@@ -55,10 +56,12 @@ function main() {
     }
     else {
         console.log(`Downloading libzmq source from ${src_url}`);
-        (0, shelljs_1.exec)(`curl "${src_url}" -fsSL -o "${tarball}"`, execOptions);
+        const execCommand = `curl "${src_url}" -fsSL -o "${tarball}"`;
+        (0, execSync)(execCommand);
     }
     if (!(0, fs_1.existsSync)(src_dir)) {
-        (0, shelljs_1.exec)(`tar xzf "${tarball}"`, execOptions);
+        const extractTarball = `tar xzf "${tarball}"`;
+        (0, execSync)(extractTarball);
     }
     if (opts.zmq_draft) {
         console.log("Enabling draft support");
@@ -112,10 +115,10 @@ function main() {
 
     const cmake_configure = `cmake -S "${src_dir}" -B ./build ${build_options} -DCMAKE_BUILD_TYPE=${opts.zmq_build_type} -DCMAKE_INSTALL_PREFIX="${libzmq_install_prefix}" -DCMAKE_INSTALL_LIBDIR=lib -DBUILD_STATIC=ON -DBUILD_TESTS=OFF -DBUILD_SHARED=OFF -DWITH_DOCS=OFF -DWITH_LIBSODIUM=OFF`;
     console.log(cmake_configure);
-    (0, shelljs_1.exec)(cmake_configure, execOptions);
+    (0, execSync)(cmake_configure);
     const cmake_build = `cmake --build ./build --config ${opts.zmq_build_type} --target install --parallel`;
     console.log(cmake_build);
-    (0, shelljs_1.exec)(cmake_build, execOptions);
+    (0, execSync)(cmake_build);
     if (process.platform === "win32") {
         // rename libzmq-v143-mt-s-4_3_4.lib to libzmq.lib
         const build_file = (0, shelljs_1.find)(`${libzmq_install_prefix}/lib/*.lib`)[0];
